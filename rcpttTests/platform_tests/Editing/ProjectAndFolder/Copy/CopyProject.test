--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _4zI9AWpgEeCzId1Gnkds9A,_vp_JkIHtEeC8fpRZXBpN8g
Element-Name: CopyProject
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _5158MMmEEeCVO9X7TqWdlg
Runtime-Version: 2.3.0.qualifier
Save-Time: 5/10/18 5:58 PM
Tags: Project, CopyPaste
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Copyright (c) 2009, 2014 Xored Software Inc and others.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

Contributors:
    Xored Software Inc - initial creation and/or initial documentation
--------------------------------------------------------------------------------

1. Select project
2. Copy this project through context menu
3. Paste this project
4. Make sure that project is created and displayed in Q7 Explorer
5. Make sure that all objects are copied in new project, reference is copied too
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

with [get-view "Test Explorer" | get-tree] {
	select p1 | get-menu Copy | click
	select p1 | get-menu Paste | click
}
let [val projectCopyName [get-window "Copy Project" | get-editbox -after [get-label "Project name:"] | get-text]] {
	get-window "Copy Project" | get-button Copy | click
	with [get-view "Test Explorer" | get-tree] {
		get-item p1 | get-property childCount | equals 4 | verify-true
		get-item "p1/context1" | get-property caption | equals context1 | verify-true
		get-item "p1/group1" | get-property caption | equals group1 | verify-true
		get-item "p1/scenario1" | get-property caption | equals scenario1 | verify-true
		get-item $projectCopyName | get-property caption | equals $projectCopyName | verify-true
		get-item $projectCopyName | get-property childCount | equals 4 | verify-true
		get-item [concat $projectCopyName "/context1"] | get-property caption | equals context1 | verify-true
		get-item [concat $projectCopyName "/group1"] | get-property caption | equals group1 | verify-true
		get-item [concat $projectCopyName "/scenario1"] | get-property caption | equals scenario1 | verify-true
		get-property itemCount | equals 4 | verify-true
	}
	with [get-view "Test Explorer" | get-tree] {
		select $projectCopyName | double-click -nowait
		select $projectCopyName | get-menu Properties | click
	}
	
	let [val propertyWindowName [concat "Properties for " $projectCopyName]] {
		get-window $propertyWindowName | get-tree | select "Project References"
		get-window $propertyWindowName | get-table | get-property itemCount | equals 3 | verify-true
		with [get-window $propertyWindowName | get-table] {
			get-item p2 | get-property caption | equals p2 | verify-true
			get-item p2 | get-property checked | equals true | verify-true
		}
		get-window $propertyWindowName | get-table | get-item p1 | get-property checked | equals false | verify-true
		get-window $propertyWindowName | get-table | get-item p3 | get-property checked | equals false | verify-true
		get-window $propertyWindowName | get-button Cancel | click
	}
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
